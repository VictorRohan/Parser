#include <stdio.h>
#include <stdlib.h>
#include <string.h>

typedef struct TreeNode {
    char data;
    struct TreeNode* left;
    struct TreeNode* right;
} TreeNode;

TreeNode* createNode(char data) {
    TreeNode* newNode = (TreeNode*)malloc(sizeof(TreeNode));
    newNode->data = data;
    newNode->left = NULL;
    newNode->right = NULL;
    return newNode;
}

void printTree(TreeNode* root, int level) {
	if (root == NULL)
        return;

    printTree(root->right, level + 1);

    for ( int i = 0; i < level; i++)
        printf("    ");

    printf("%c\n", root->data);

    printTree(root->left, level + 1);
}

int main() {
    char expression[100];
    printf("Enter the expression: ");
    fgets(expression, sizeof(expression), stdin);

    // Remove newline character from the input expression
    expression[strcspn(expression, "\n")] = '\0';

    // Create the expression tree based on user input
    TreeNode* stack[100];
    int top = -1;

    TreeNode* root = NULL;

    for (int i = 0; expression[i] != '\0'; i++) {
        if (expression[i] == ' ')
            continue;

        if (expression[i] == '(') {
            stack[++top] = root;
            root = NULL;
        } else if (expression[i] == ')') {
            root = stack[top--];
        } else {
            TreeNode* newNode = createNode(expression[i]);
            newNode->left = root;
            root = newNode;
        }
    }

    printf("\nExpression in tree form:\n\n");
    printTree(root, 0);

    return 0;
}
